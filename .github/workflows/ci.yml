# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  conda_test:
    name: Conda Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest]
        pyversion: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: cosmosis-env
          channels: conda-forge
          miniforge-variant: Mambaforge
          miniforge-version: latest
          python-version: ${{ matrix.pyversion }}

      - name: Install dependencies with conda
        shell: bash -l {0}
        run: mamba install -c conda-forge cosmosis "numpy<1.24" cosmosis-build-standard-library

      - name: Build standard library
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          make

      - name: Smail example
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/various-spectra.ini

      - name: BAO
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/bao.ini

      - name: CAMB Planck
        shell: bash -l {0}
        run: |
          # print out the configuration
          python -m cosmosis.configure
          source cosmosis-configure
          export
          mkdir -p output
          # Check the downloader works
          ./examples/get-planck-data.sh
          # And that the pipeline runs afterwards
          cosmosis examples/planck.ini | tee output/planck.log
          OLD_CAMB=$(python -c 'import camb;vs=camb.__version__.split(".");print(float(vs[0]+"."+vs[1])<1.4)')
          if [ "$OLD_CAMB" == "True" ]; then grep 'Likelihood =  -1441.30' output/planck.log; fi
          if [ "$OLD_CAMB" == "False" ]; then grep 'Likelihood =  -1441.46' output/planck.log; fi
          

      - name: Class Planck
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/planck_class.ini -p class.mpk=T | tee output/class.log
          # This may need updating as we modify the class interface
          # The settings are not optimized
          # grep 'Likelihood =  -5968.93' output/class.log
          # This seems to give different results on different systems

      - name: Cache WMAP data
        id: cache-wmap
        uses: actions/cache@v3
        env:
          cache-name: cache-wmap-data
        with:
          path: likelihood/wmap9/data/
          key: wmap-9-data

      - if: ${{ steps.cache-wmap.outputs.cache-hit != 'true' }}
        name: Download WMAP data
        run:  |
          ./examples/get-wmap-data.sh

      - name: WMAP likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/wmap.ini | tee output/wmap.log


      - name: Pantheon emcee
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/pantheon.ini -p emcee.samples=20
          cosmosis-postprocess examples/pantheon.ini -o output/pantheon
          test -f output/pantheon/cosmological_parameters--omega_m.png

      - name: PantheonPlusAndShoes
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/pantheon_plus_shoes.ini -p runtime.sampler=test | tee output/pantheon_plus_shoes_log.txt
          grep 'Likelihood =  -738.23' output/pantheon_plus_shoes_log.txt

      - name: DES Y1 likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y1.ini | tee output/des-y1.log
          # unchanged in camb 1.4
          grep 'Likelihood =  5237.3' output/des-y1.log

      - name: DES Y1 likelihood with cl_to_corr
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y1.ini -p 2pt_shear.file=./shear/cl_to_corr/cl_to_corr.py 2pt_shear.corr_type=xi | tee output/des-y1.log
          # unchanged in camb 1.4
          grep 'Likelihood =  5237.3' output/des-y1.log


      - name: DES Y3 likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3.ini -p pk_to_cl_gg.save_kernels=T pk_to_cl.save_kernels=T | tee output/des-y3.log
          OLD_CAMB=$(python -c 'import camb;vs=camb.__version__.split(".");print(float(vs[0]+"."+vs[1])<1.4)')
          if [ "$OLD_CAMB" == "True" ]; then grep 'Likelihood =  6043.23' output/des-y3.log; fi
          if [ "$OLD_CAMB" == "False" ]; then grep 'Likelihood =  6043.34' output/des-y3.log; fi


      - name: DES Y3 Class likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3-class.ini
          # class is not consistent across systems to the level needed here

      - name: DES Y3 cosmic shear likelihood
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3-shear.ini | tee output/des-y3-shear.log
          OLD_CAMB=$(python -c 'import camb;vs=camb.__version__.split(".");print(float(vs[0]+"."+vs[1])<1.4)')
          if [ "$OLD_CAMB" == "True" ]; then grep 'Likelihood =  2957.03' output/des-y3-shear.log; fi
          if [ "$OLD_CAMB" == "False" ]; then grep 'Likelihood =  2957.12' output/des-y3-shear.log; fi


      - name: DES Y3 likelihood with Mira Titan
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3-mira-titan.ini | tee output/des-y3-mt.log
          OLD_CAMB=$(python -c 'import camb;vs=camb.__version__.split(".");print(float(vs[0]+"."+vs[1])<1.4)')
          if [ "$OLD_CAMB" == "True" ]; then grep 'Likelihood =  6048.0' output/des-y3-mt.log; fi
          if [ "$OLD_CAMB" == "False" ]; then grep 'Likelihood =  6048.1' output/des-y3-mt.log; fi

      - name: DES Y3 likelihood with Mead nonlinear
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3.ini -v halo_model_parameters.logT_AGN=8.2 -p camb.halofit_version=mead2020_feedback | tee output/des-y3-mead.log
          OLD_CAMB=$(python -c 'import camb;vs=camb.__version__.split(".");print(float(vs[0]+"."+vs[1])<1.4)')
          if [ "$OLD_CAMB" == "True" ]; then grep 'Likelihood =  6049.94' output/des-y3-mead.log; fi
          if [ "$OLD_CAMB" == "False" ]; then grep 'Likelihood =  6049.00' output/des-y3-mead.log; fi

      - name: DES Y3 6x2pt
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/des-y3-6x2.ini

      - name: Euclid emulator
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/euclid-emulator.ini
          test -f output/euclid-emulator/matter_power_nl/p_k.txt

      - name: Log w example
        shell: bash -l {0}
        run: |
          source cosmosis-configure
          cosmosis examples/w_model.ini | tee output/w_model.log

      - name: Run Demos
        shell: bash -l {0}
        run: |
          .github/run-demos.sh




  apt-get-test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10", "3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install apt dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gfortran-7 swig libopenmpi-dev openmpi-bin libopenblas-dev
        sudo ln -s `which gfortran-7` /usr/local/bin/gfortran
        sudo apt-get -y install libgsl-dev libfftw3-bin libfftw3-dev libfftw3-3 autotools-dev  autoconf libcfitsio-dev


    - uses: actions/cache@v2
      name: Load pip cache
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/setup.py') }}-v2

    - uses: actions/cache@v2
      name: Planck Data Cache
      id: cache-planck
      with:
        path: likelihood/planck2018/baseline
        key: ${{ runner.os }}-planck-2018

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install cosmosis
        pip install -v --no-cache-dir --no-binary=mpi4py,camb mpi4py camb
        pip install fitsio astropy fast-pt Cython

    - name: Build
      run: |
        source .github/ci-setup.sh && make

    - name: Download Planck 2018 Data
      if: steps.cache-planck.outputs.cache-hit != 'true'
      run: |
          cd likelihood/planck2018
          curl "http://pla.esac.esa.int/pla/aio/product-action?COSMOLOGY.FILE_ID=COM_Likelihood_Data-baseline_R3.00.tar.gz" -o COM_Likelihood_Data-baseline_R3.00.tar.gz
          tar -zxvf COM_Likelihood_Data-baseline_R3.00.tar.gz

    # I have seen some failures here
    - name: Check camb installation
      run: |
        source .github/ci-setup.sh
        python -c "import camb"


    - name: Demo 2 Planck 2018 Likelihood
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo2.ini
        cosmosis-postprocess demos/demo2.ini -o output/demo2
        test -f output/demo2/comoving_distance.png


    - name: Demo 9 Low-Resolution Multinest
      run: |
        source .github/ci-setup.sh
        cosmosis demos/demo9.ini -p multinest.live_points=100
        cosmosis-postprocess output/demo9.txt -o output/demo9
        test -f output/demo9/2D_supernova_params--deltam_cosmological_parameters--omega_m.png
