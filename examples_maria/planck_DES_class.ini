%include /home/mberti/cosmosis-standard-library/examples_maria/des-y3.ini

[runtime]
sampler = emcee
root = ${PWD}


[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 200
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 10000
; This is the interval at which convergence diagnostics
; are performed
nsteps = 10


[output]
filename = output/planck_lensing_pantheon_BAO_SHOES_DESy3_class_maria.txt
format = text
verbosity = debug


[DEFAULT]
; This value is used below as %(planck_path)s
planck_path = likelihood/planck2018/baseline/plc_3.0


[pipeline]
; these names refer to sections later in the file:
modules = consistency hi_class planck pantheon riess21 eboss_dr16_elg eboss_dr16_lrg eboss_dr16_lya eboss_dr16_qso mgs 6dfgs
          bbn_consistency
           extrapolate
           fast_pt
           fits_nz  lens_photoz_width  lens_photoz_bias  source_photoz_bias
           IA  pk_to_cl_gg  pk_to_cl
           add_magnification  add_intrinsic
           2pt_shear 2pt_gal  2pt_gal_shear
           shear_m_bias   add_point_mass
           2pt_like  shear_ratio_like
values =  /home/mberti/cosmosis-standard-library/examples_maria/planck_DES_values_MG.ini 
quiet=F
debug=T
timing=F

[extrapolate]
file = boltzmann/extrapolate/extrapolate_power.py
power_spectra_names = matter_power_nl matter_power_lin
npoint = 10
kmax = 500.0

[planck]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = likelihood/planck2018/planck_interface.so
data_1 = %(planck_path)s/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik
data_2 = %(planck_path)s/low_l/commander/commander_dx12_v3_2_29.clik
data_3 = %(planck_path)s/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik
lensing_1 = %(planck_path)s/lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8.clik_lensing

[pantheon]
file = likelihood/pantheon/pantheon.py

; The Riess 11 likelihood anchors H0 for us
[riess21]
file = likelihood/riess21/riess21.py

[eboss_dr16_elg]
file = likelihood/eboss_dr16/elg/eboss_dr16_elg.py
mode = 1

[eboss_dr16_lrg]
file = likelihood/eboss_dr16/lrg/eboss_dr16_lrg.py
mode = 1

[eboss_dr16_lya]
file = likelihood/eboss_dr16/lya/eboss_dr16_lya.py

[eboss_dr16_qso]
file = likelihood/eboss_dr16/qso/eboss_dr16_qso.py
mode = 1

#[mgs_bao]
#file = likelihood/mgs_bao/mgs_bao.py

[mgs]
file = likelihood/eboss_dr16/mgs/mgs.py

[6dfgs]
file = likelihood/6dfgs/6dfgs.py
;6dfgs measurement of r_s/D_v (if you want to use only D_v, set bao_mode to dv).
bao_mode = "rs_dv"
rsd_like = yes

; The consistency module translates between our chosen parameterization
; and any other that modules in the pipeline may want (e.g. camb)
[consistency]
file = ./utility/consistency/consistency_interface.py

[class]
file = boltzmann/class/class_interface.py
version = 3.2.0
lmax = 2850
debug = T
zmax = 4.0
kmax = 100.0
nk = 700
cmb = T
mpk = T
lensing = T
hi_class_non_linear = halofit

[hi_class]
file = boltzmann/hi_class/hi_class_interface.py
lmax = 2850
debug = T
zmax = 4.0
kmax = 100.0
nk = 700
cmb = T
mpk = T
lensing = T

# HI_CLASS_NEW: all the parameters of (hi_)class can be written here prepending
# class_ or hi_class_ (it is equivalent). This way we do not need to modify
# the hi_class interface for every new parameter we need.
hi_class_gravity_model = mgclass_spline
hi_class_expansion_model = domega_spline
hi_class_back_spline_z_anchor_smg = 1200.
hi_class_back_spline_size_smg = 20
hi_class_use_Sigma = yes
hi_class_use_mgclass_prior = yes
mgclass_spline_z_anchor_smg = 1200.
hi_class_mgclass_spline_size_smg = 20
hi_class_non linear = halofit
