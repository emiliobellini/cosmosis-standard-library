name: hi_class
version: 1.1
purpose: "Boltzmann and background integrator for BG, CMB, matter power, and more"
url: http://hiclass-code.net
interface: hi_class_interface.py
attribution: [Emilio Bellini, Miguel Zumalacarregui, Ignacy Sawicki, Julien Lesgourgues, Thomas Tram, Benjamin Audren, Simon Prunet, Jesus Torrado, etc]
rules:
    - "You can use hi_class freely, provided that in your publications, you cite at least the paper hi_class: Horndeski in the Cosmic Linear Anisotropy Solving System and the paper CLASS II: Approximation schemes. Feel free to cite more CLASS and hi_class papers!"
cite:
    - "https://arxiv.org/abs/1909.01828"
    - "JCAP 02 (2020) 008"
    - "https://arxiv.org/abs/1605.06102"
    - "JCAP 08 (2017) 019"
    - "https://arxiv.org/abs/1104.2932"
    - "JCAP 07 (2011) 034"
    - "https://arxiv.org/abs/1104.2934"
    - "JCAP 09 (2011) 032"

assumptions:
    - Dark Energy and Modified Gravity within the beyond-Horndeski framework
    - Various choices for approximations and implementations of the Boltzmann and related equations

explanation: |4

    hi_class is one of the cosmology codes for evolving perturbations
    in the primordial universe into CMB and other power spectra, as
    well as various other quantities. It is an extension of CLASS to consider
    Dark Energy and Modified Gravity scenarios a la Horndeski. This is a very
    preliminary interface to the general and powerful CLASS code.

    See http://hiclass-code.net for a fuller description and the github repository
    https://github.com/miguelzuma/hi_class_public for the latest public code.

    You should also check out the MontePython sampler code, which uses hi_class
    to do similar inference to CosmoSIS.

    This version of hi_class has been modified very slightly to be able to output at
    more redshifts and to use the cosmosis build system.



params:
    lmax:
        meaning: Max angular frequency ell to use for cmb calculation
        type: int
        default: 2000
    kmax:
        meaning: The max wavenumber k to use for P(k,z) calculation
        type: int
        default: 50.0
    zmax:
        meaning: Max redshift to save P(k,z) and distances
        type: real
        default: 4.0
    cmb:
        meaning: Whether to compute CMB spectra
        type: bool
        default: True
    mpk:
        meaning: Whether to compute matter power spectra
        type: bool
        default: True
    cmb:
        meaning: Whether to lens the output CMB power spectra
        type: bool
        default: True
    debug:
        meaning: Whether to give a fuller traceback on errors
        type: bool
        default: False
inputs:
    cosmological_parameters:
        ombh2:
            meaning: Physical baryon density fraction today, Omega_b * h**2
            type: real
            default:
        omch2:
            meaning: Physical cdm density fraction today, Omega_c * h**2
            type: real
            default:
        h0:
            meaning: Hubble parameter H0 / 100 km/s/Mpc
            type: real
            default:
        tau:
            meaning: Optical depth to last-scattering
            type: real
            default:
        n_s:
            meaning: Scalar spectral index
            type: real
            default:
        A_s:
            meaning: Scalar spectrum primordial amplitude
            type: real
            default:
        massless_nu:
            meaning: Effective number of massless neutrinos
            type: real
            default: 3.046
        t_cmb:
            meaning: The CMB temperature today in Kelvin
            type: real
            default: 2.726
outputs:
    cosmological_parameters:
        sigma_8:
            meaning: Amplitude of linear matter power at 8/h Mpc at z=0.  Only calculated
                if mode=all
            type: real
    distances:
        nz:
            meaning: Number of z samples
            type: int
        z:
            meaning: Redshifts of samples
            type: real 1d
        a:
            meaning: Scale factor of samples
            type: real 1d
        d_a:
            meaning: Angular diameter distance in Mpc
            type: real 1d
        d_m:
            meaning: Co-moving distance in Mpc
            type: real 1d
        d_l:
            meaning: Luminosity distance in Mpc
            type: real 1d
        mu:
            meaning: Distance modulus
            type: real 1d
        H:
            meaning: Hubble parameter with in units of Mpc
            type: real 1d
        age:
            meaning: Age of universe in GYr
            type: real
        rs_zdrag:
            meaning: Sound horizon size at zdrag. Only if mode!=background
            type: real
    matter_power_lin:
        z:
            meaning: Redshifts of samples. Only if mode=all
            type: real 1d
        k_h:
            meaning: K wavenumbers of samples in Mpc/h. Only if mode=all
            type: real 1d
        p_k:
            meaning: Matter power spectrum at samples in (Mpc/h)^-3. Only if mode=all
            type: real 2d
    cmb_cl:
        ell:
            meaning: Angular frequencies. Only if mode=cmb or all
            type: int 1d
        tt:
            meaning: ell * (ell+1) C_ell^TT / 2 pi in mu K^2. Only if mode=cmb or
                all
            type: real 1d
        ee:
            meaning: ell * (ell+1) C_ell^EE / 2 pi in mu K^2. Only if mode=cmb or
                all
            type: real 1d
        bb:
            meaning: ell * (ell+1) C_ell^BB / 2 pi in mu K^2. Only if mode=cmb or
                all
            type: real 1d
        te:
            meaning: ell * (ell+1) C_ell^TE / 2 pi in mu K^2. Only if mode=cmb or
                all
            type: real 1d
