name: start_points
version: '1.0'
purpose: Generate a file containing the starting points for each walker for emcee
url: ''
interface: start_points.py
attribution: [Emilio Bellini]
rules: Please maintain attribution.
cite: []
assumptions:
-   Emcee is the chosen sampler
-   The option 'start_points' is used in the 'emcee' section

explanation: |
    "
    This module generates a file containing the starting points for each
    walker of an emcee run. It draws the samples assuming a truncated
    multivariate gaussian with mean and covmat. The truncation is done
    just by recalculating every point that lies outside the prior.

    It should be put at the beginning of the pipeline. It has only a setup
    method, while execute is empty.

    In the emcee section one should specify the start_points option providing
    the path of a file. The file can be non-existent (it will be created by
    this module at the location specified)

    As input parameters one can pass a file with the mean values and the 
    covariance matrix for the varied parameters (the ones generated by 
    cosmosis-postprocess have the right format). If these files contain
    less parameters than the varied ones, the starting points for the
    additional parameters will be generated assuming the mean and the
    standard deviation of the values file. The standard deviation is
    calculated from the prior width divided by a squeeze_factor (default: 10).
    In this way it is easy to generate initial points when we are adding 
    parameters to previously run chains.
    "

params:
    mean:
        meaning: 'A file containing a list of parameters (name value) that should be treated as means. One of the files (bestfit, peak, mean) generated by cosmosis-postprocess is ok'
        type: str
        default: ''
    covmat:
        meaning: 'A file containing the covariance matrix for a list of parameters (listed in the head of the file). The covmat file generated by cosmosis-postprocess is ok'
        type: str
        default: ''
    squeeze_factor:
        meaning: 'If a parameter has not an element in the covmat file decide the standard deviation of that parameter by taking the square root of the prior width divided by this factor.'
        type: float
        default: 10.
    debug:
        meaning: 'Perform some test in order to estimate how well we recover the covariance matrix using the pipeline of this module. The number of samples used in these tests is debug_samples'
        type: bool
        default: false
    debug_samples:
        meaning: 'Number of samples to be used for the debug tests. The large it is, the better the mean and covmat of these samples should resemble the original means and covmat.'
        type: int
        default: 10000
    rescale:
        meaning: 'Wether to rescale the mean and the covmat of the parameters in order to perform the internal sampling with parameters of order one.This is particularly useful when the typical value of different parameters if several orders of magnitude different.'
        type: bool
        default: true
    truncate:
        meaning: 'Wether to truncate the samples taking into account the priors or not.'
        type: bool
        default: true

inputs: {}
outputs: {}
